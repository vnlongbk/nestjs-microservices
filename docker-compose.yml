version: "3"

services:
  # auth:
  #   build:
  #     context: ./auth
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   hostname: auth
  #   ports:
  #     - "9001:9001"
  #   env_file:
  #     - ./auth/.env
  #   networks:
  #     - backend
  #   volumes:
  #     - ./auth:/var/www/auth
  #     - /var/www/auth/node_modules
  # logging:
  #   driver: fluentd
  #   options:
  #     fluentd-async: "true"
  #     fluentd-address: 192.168.29.38:24224
  #     tag: auth-service

  postgres:
    container_name: postgres_microservices
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=123456
      - POSTGRES_USER=postgres
    networks:
      - backend
    ports:
      - "5432:5432"
    volumes:
      - ./backup/postgres_data:/var/lib/postgresql/data
      # - postgres_data:/var/lib/postgresql/data
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-async: "true"
    #     fluentd-address: 192.168.29.38:24224
    #     tag: database-postgres

  rabbitmq:
    image: rabbitmq:3-management
    restart: on-failure
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - ./backup/rabbit_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-async: "true"
    #     fluentd-address: 192.168.29.38:24224
    #     tag: rabbitmq

  cache:
    hostname: redis
    image: redis:latest
    restart: on-failure
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-async: "true"
    #     fluentd-address: 192.168.29.38:24224
    #     tag: cache

  kong:
    build:
      context: ./kong
      dockerfile: Dockerfile
    container_name: kong
    restart: unless-stopped
    command: "kong start"
    volumes:
      - ./kong/conf/kong.yml:/usr/local/kong/declarative/kong.yml
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    ports:
      - "8000:8000"
      - "8001:8001"
    networks:
      - backend
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-async: "true"
    #     fluentd-address: 192.168.29.38:24224
    #     tag: kong

  # fluent-bit:
  #   container_name: fluent-bit
  #   environment:
  #     LOKI_URL: http://loki:3100/loki/api/v1/push
  #   build:
  #     context: ./fluent-bit
  #     dockerfile: Dockerfile
  #   ports:
  #     - "24224:24224"
  #     - "24224:24224/udp"
  #   networks:
  #     - loki

  # loki:
  #   image: grafana/loki:latest
  #   container_name: loki
  #   expose:
  #     - "3100"
  #   networks:
  #     - loki

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     GF_RENDERING_SERVER_URL: http://renderer:8081/render
  #     GF_RENDERING_CALLBACK_URL: http://grafana:3000/
  #     GF_LOG_FILTERS: rendering:debug
  #   networks:
  #     - loki

  # renderer:
  #   image: grafana/grafana-image-renderer:latest
  #   container_name: grafana-image-renderer
  #   expose:
  #     - "8081"
  #   environment:
  #     ENABLE_METRICS: "true"
  #   networks:
  #     - loki

networks:
  backend:
    driver: bridge
  # loki:
  #   driver: bridge

volumes:
  rabbit_data:
    driver: local
  postgres_data:
    driver: local
